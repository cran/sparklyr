% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_interface.R
\name{spark_save_table}
\alias{spark_save_table}
\title{Saves a Spark DataFrame as a Spark table}
\usage{
spark_save_table(x, path, mode = NULL, options = list())
}
\arguments{
\item{x}{A Spark DataFrame or dplyr operation}

\item{path}{The path to the file. Needs to be accessible from the cluster.
Supports the \samp{"hdfs://"}, \samp{"s3a://"} and \samp{"file://"} protocols.}

\item{mode}{A \code{character} element. Specifies the behavior when data or
  table already exists. Supported values include: 'error', 'append', 'overwrite' and
  ignore. Notice that 'overwrite' will also change the column structure.

  For more details see also \url{http://spark.apache.org/docs/latest/sql-programming-guide.html#save-modes}
  for your version of Spark.}

\item{options}{A list of strings with additional options.}
}
\description{
Saves a Spark DataFrame and as a Spark table.
}
\seealso{
Other Spark serialization routines: \code{\link{spark_load_table}},
  \code{\link{spark_read_csv}},
  \code{\link{spark_read_jdbc}},
  \code{\link{spark_read_json}},
  \code{\link{spark_read_libsvm}},
  \code{\link{spark_read_parquet}},
  \code{\link{spark_read_source}},
  \code{\link{spark_read_table}},
  \code{\link{spark_read_text}},
  \code{\link{spark_write_csv}},
  \code{\link{spark_write_jdbc}},
  \code{\link{spark_write_json}},
  \code{\link{spark_write_parquet}},
  \code{\link{spark_write_source}},
  \code{\link{spark_write_table}},
  \code{\link{spark_write_text}}
}
